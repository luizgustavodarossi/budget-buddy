name: Rails CI with Coverage Check

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Test and Coverage Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Run Tests
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:schema:load RAILS_ENV=test
          bundle exec rspec

      - name: Install SimpleCov
        run: gem install simplecov

      - name: Validate Coverage
        run: |
          export COVERAGE_FILE=./coverage/.resultset.json

          gem install simplecov

          # Gere o relatório de cobertura usando SimpleCov
          simplecov

          # Leia o arquivo de relatório gerado para obter a cobertura
          COVERAGE=$(simplecov_json_summary ./coverage/.resultset.json)

          # Exiba a cobertura alcançada
          echo "Cobertura de código: $COVERAGE"

          # Salve a cobertura em um arquivo de texto
          echo "$COVERAGE" > coverage.txt

          # Determine se a cobertura atende aos critérios de sucesso ou falha
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            echo "Cobertura de código atende aos critérios de sucesso."
            exit 0 # Sucesso
          else
            echo "Cobertura de código não atende aos critérios de sucesso."
            exit 1 # Falha
          fi

        # Salve a cobertura em um arquivo de texto
      - name: Save Coverage Report
        run: |
          echo "$COVERAGE" > coverage.txt
        continue-on-error: true

      # Determine se a cobertura atende aos critérios de sucesso ou falha
      - name: Check Coverage and Set Exit Code
        id: coverage-check
        run: |
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            echo "Cobertura de código atende aos critérios de sucesso."
            echo "coverage=$COVERAGE" >> $GITHUB_ENV
          else
            echo "Cobertura de código não atende aos critérios de sucesso."
            exit 1 # Falha
          fi

      - name: Upload Coverage Report
        if: steps.coverage-check.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.txt
